{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Web3","givenProvider","eth","Contract","from","gasPrice","App","useCountdownTimer","timer","countdown","start","reset","pause","isRunning","Fragment","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.128f87e3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n//import { rimmingToken2 } from \"./abi/abi\";\r\nimport Web3 from \"web3\";\r\nimport { useCountdownTimer } from 'use-countdown-timer';\r\n//import detectEthereumProvider from '@metamask/detect-provider';\r\n//var Web3 = require('web3');\r\n//import \"./App.css\";\r\n\r\nconst abi = [\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokens\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Approval\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokens\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Transfer\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"_totalSupply\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"allowance\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"remaining\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokens\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approve\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"success\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"who\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"balanceOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"totalSupply\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokens\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transfer\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"success\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokens\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferFrom\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"success\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];\r\n\r\nconst web3 = new Web3(Web3.givenProvider);\r\nconst contractAddress = \"0x500bf5114315B3167e95e9B5860E8E7dA709FB71\";\r\n//var rimmingContract = new web3.eth.Contract(abi, contractAddress);\r\nvar rimmingContract = new web3.eth.Contract(abi, contractAddress, {\r\n   from: '0xF7d224B647d6B8dDF6e30f5Cd0E270c8f89775Ce',\r\n   gasPrice: '20000000000' // default gas price in wei, 20 gwei in this case\r\n});\r\n\r\nfunction App() {\r\n //const [number, setUint] = useState(0);\r\n/// const [getNumber, setGet] = useState(\"0\");\r\n\r\nconst { countdown, start, reset, pause, isRunning } = useCountdownTimer({\r\n    timer: 1000 * 50,\r\n  });\r\n \r\n const numberGet = async (t) => {\r\n\t \r\n   //const post = await rimmingContract.methods.get().totalsupply();\r\n   const totalSupply = await rimmingContract.methods.totalSupply().call();\r\n   console.log(totalSupply);\r\n\r\n  // setGet(post);\r\n };\r\n \r\n  const transfer = async (t) => {\r\n\t\r\n\tconst accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\tconst account = accounts[0];\r\n\t//const decimals = 18;\r\n\t//const BN = web3.utils.BN;\r\n\t//const tokenbits = (new BN(10)).pow(decimals);\r\n   //const value = (new BN(100)).mul(tokenbits);\r\n\t//const value= Math.pow(10000, decimals);\r\n\t//log.console(account);\r\n   //const post = await rimmingContract.methods.get().totalsupply();\r\n    //const gas = await rimmingContract.methods.transfer(\"0xD598BE887556e032DE4a5a6c594d3457B7b518cB\", \"1000\").call();//.estimateGas();\r\n    //const post = await rimmingContract.methods.transfer({\"0xD598BE887556e032DE4a5a6c594d3457B7b518cB\", \"1000\"}).call({from: account});\r\n    const post = await rimmingContract.methods.transfer(\"0xD598BE887556e032DE4a5a6c594d3457B7b518cB\", \"100000000000000000000000\").send({from:account, gas: 30000000});\r\n   \r\n   console.log(post);\r\n   console.log(\"Transfer Clicked\");\r\n\r\n  // setGet(post);\r\n };\r\n \r\n   const transferFrom = async (t) => {\r\n\t const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\tconst account = accounts[0];\r\n   //const post = await rimmingContract.methods.get().totalsupply();\r\n   const totalSupply = await rimmingContract.methods.transferFrom(\"0xF7d224B647d6B8dDF6e30f5Cd0E270c8f89775Ce\", \"0xD598BE887556e032DE4a5a6c594d3457B7b518cB\", \"10000000\").send({from:account, gas: 300000});\r\n   console.log(\"Transfer From Clicked\");\r\n\r\n  // setGet(post);\r\n };\r\n \r\n   const approve = async (t) => {\r\n\t \r\n   //const post = await rimmingContract.methods.get().totalsupply();\r\n   const totalSupply = await rimmingContract.methods.approve(\"0xD598BE887556e032DE4a5a6c594d3457B7b518cB\", \"10000000\").call();\r\n   console.log(\"Approve Clicked\");\r\n\r\n  // setGet(post);\r\n };\r\n \r\n const connectWallet = async () => {\r\n  if (window.ethereum) { //check if Metamask is installed\r\n\t\tconsole.log(\"here\")\r\n        try {\r\n\t\t\tconsole.log(\"try\");\r\n            //const address = await window.ethereum.eth_requestAccounts(); //connect Metamask\r\n\t\t\t//const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts' });\r\n\t\t\t//setAccounts(accounts);\r\n            const obj = {\r\n                    connectedStatus: true,\r\n                    status: \"\",\r\n                   // accounts: accounts\r\n                }\r\n                return obj;\r\n             \r\n        } catch (error) {\r\n\t\t\tconsole.log(\"here\")\r\n            return {\r\n\t\t\t\t\r\n                connectedStatus: false,\r\n                status: \"🦊 Connect to Metamask using the button on the top right.\"\r\n            }\r\n        }\r\n        \r\n  } else {\r\n\t\tconsole.log(\"here install check\")\r\n        return {\r\n            connectedStatus: false,\r\n            status: \"🦊 You must install Metamask into your browser: https://metamask.io/download.html\"\r\n        }\r\n      } \r\n};\r\n\r\n\r\n  \r\n\r\n \r\n  return (\r\n    <React.Fragment>\r\n      <div>{countdown}</div>\r\n      <button onClick={reset}>Reset</button>\r\n      {isRunning ? (\r\n        <button onClick={pause}>Pause</button>\r\n      ) : (\r\n        <button onClick={start}>Start</button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}