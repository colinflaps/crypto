{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["rimmingContract","Web3","givenProvider","eth","Contract","from","gasPrice","App","numberGet","t","a","methods","totalSupply","call","console","log","transfer","window","ethereum","request","method","accounts","account","send","gas","post","transferFrom","approve","connectWallet","obj","connectedStatus","status","className","onClick","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bab72ea.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n//import { rimmingToken2 } from \"./abi/abi\";\nimport Web3 from \"web3\";\n//import detectEthereumProvider from '@metamask/detect-provider';\n//var Web3 = require('web3');\n//import \"./App.css\";\n\nconst abi = [\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"tokenOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokens\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Approval\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokens\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Transfer\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"_totalSupply\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"tokenOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"allowance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"remaining\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokens\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"approve\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"success\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"who\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"balanceOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"totalSupply\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokens\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transfer\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"success\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokens\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferFrom\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"success\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t}\n];\n\nconst web3 = new Web3(Web3.givenProvider);\nconst contractAddress = \"0x500bf5114315B3167e95e9B5860E8E7dA709FB71\";\n//var rimmingContract = new web3.eth.Contract(abi, contractAddress);\nvar rimmingContract = new web3.eth.Contract(abi, contractAddress, {\n   from: '0xF7d224B647d6B8dDF6e30f5Cd0E270c8f89775Ce',\n   gasPrice: '20000000000' // default gas price in wei, 20 gwei in this case\n});\n\nfunction App() {\n //const [number, setUint] = useState(0);\n/// const [getNumber, setGet] = useState(\"0\");\n\n \n const numberGet = async (t) => {\n\t \n   //const post = await rimmingContract.methods.get().totalsupply();\n   const totalSupply = await rimmingContract.methods.totalSupply().call();\n   console.log(totalSupply);\n\n  // setGet(post);\n };\n \n  const transfer = async (t) => {\n\t\n\tconst accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n\tconst account = accounts[0];\n\t//log.console(account);\n   //const post = await rimmingContract.methods.get().totalsupply();\n    //const gas = await rimmingContract.methods.transfer(\"0xD598BE887556e032DE4a5a6c594d3457B7b518cB\", \"1000\").call();//.estimateGas();\n    //const post = await rimmingContract.methods.transfer({\"0xD598BE887556e032DE4a5a6c594d3457B7b518cB\", \"1000\"}).call({from: account});\n    const post = await rimmingContract.methods.transfer(\"0xD598BE887556e032DE4a5a6c594d3457B7b518cB\", \"100000000\").send({from:account, gas: 30000000});\n   \n   console.log(post);\n   console.log(\"Transfer Clicked\");\n\n  // setGet(post);\n };\n \n   const transferFrom = async (t) => {\n\t \n   //const post = await rimmingContract.methods.get().totalsupply();\n   const totalSupply = await rimmingContract.methods.transferFrom(\"0xF7d224B647d6B8dDF6e30f5Cd0E270c8f89775Ce\", \"0xD598BE887556e032DE4a5a6c594d3457B7b518cB\", \"1000\").call();\n   console.log(\"Transfer From Clicked\");\n\n  // setGet(post);\n };\n \n   const approve = async (t) => {\n\t \n   //const post = await rimmingContract.methods.get().totalsupply();\n   const totalSupply = await rimmingContract.methods.approve(\"0xD598BE887556e032DE4a5a6c594d3457B7b518cB\", \"1000\").call();\n   console.log(\"Approve Clicked\");\n\n  // setGet(post);\n };\n \n const connectWallet = async () => {\n  if (window.ethereum) { //check if Metamask is installed\n\t\tconsole.log(\"here\")\n        try {\n\t\t\tconsole.log(\"try\");\n            //const address = await window.ethereum.eth_requestAccounts(); //connect Metamask\n\t\t\t//const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts' });\n\t\t\t//setAccounts(accounts);\n            const obj = {\n                    connectedStatus: true,\n                    status: \"\",\n                   // accounts: accounts\n                }\n                return obj;\n             \n        } catch (error) {\n\t\t\tconsole.log(\"here\")\n            return {\n\t\t\t\t\n                connectedStatus: false,\n                status: \"🦊 Connect to Metamask using the button on the top right.\"\n            }\n        }\n        \n  } else {\n\t\tconsole.log(\"here install check\")\n        return {\n            connectedStatus: false,\n            status: \"🦊 You must install Metamask into your browser: https://metamask.io/download.html\"\n        }\n      } \n};\n\n \nreturn (\n   <div className=\"main\">\n     <div className=\"card\">\n       <br />\n       <button className=\"button\" onClick={numberGet} type=\"button\">\n         Get total supply911\n       </button>\n\t   <br />\n       <button className=\"button2\" onClick={connectWallet} type=\"button\">\n         Connect to Metamask\n       </button>\n\t    <br />\n\t   <button className=\"button3\" onClick={transfer} type=\"button\">\n         Transfer\n       </button>\n\t    <br />\n\t    <button className=\"button4\" onClick={transferFrom} type=\"button\">\n         Transfer From\n       </button>\n\t    <br />\n\t\t  <button className=\"button5\" onClick={approve} type=\"button\">\n         Approve\n       </button>\n     </div>\n   </div>\n );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}